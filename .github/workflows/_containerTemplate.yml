name: Container Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "dev"
        description: "Specifies the environment of the deployment."
      working_directory:
        required: false
        type: string
        default: ./code/function
        description: "Specifies the uri of the container registry."
      registry_uri:
        required: false
        type: string
        default: ghcr.io
        description: "Specifies the uri of the container registry."
      image_namespace_name:
        required: true
        type: string
        description: "Specifies the namespace name of the image."
      image_name:
        required: true
        type: string
        description: "Specifies the name of the image."
    secrets:
      USER_NAME:
        required: true
        description: "Specifies the user name for the container registry."
      PASSWORD:
        required: true
        description: "Specifies the password for the container registry."

jobs:
  deployment:
    name: Container Build & Push
    runs-on: [windows-2019]
    continue-on-error: false
    environment: ${{ inputs.environment }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Check Out Repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v4

      # Login Container Registry
      - name: Login Container Registry
        id: registry_login
        uses: docker/login-action@v3.0.0
        # if: github.event_name != 'pull_request'
        with:
          registry: ${{ inputs.registry_uri }}
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASSWORD }}

      # Extract Metadata (tags, labels)
      - name: Extract Metadata
        id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          context: workflow
          images: |
            ${{ inputs.registry_uri }}/${{ inputs.image_namespace_name }}/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Build and Push Docker Image
      - name: Build and push Docker Image
        id: build_push
        working-directory: ${{ inputs.working_directory }}
        if: runner.os == 'Windows'
        run: |
          docker build `
            --file=Dockerfile `
            --build-arg="INSTALL_JDK=true" `
            --tag ${{ steps.metadata.outputs.tags }} .

          if( "${{ github.event_name != 'pull_request' }}" -eq "false" ) {
            docker push ${{ steps.metadata.outputs.tags }}
          }
